# Starter pipeline
trigger:
  branches:
    include:
      - main
      - release
    exclude:
      - feature/*

# schedules:
#   - cron: "0 2 * * *"   # UTC time
#     displayName: Nightly Build
#     branches:
#       include:
#         - main
#     always: true

pr:
  branches:
    include:
      - main
      - release/*
    exclude:
      - feature/*

  paths:
    include:
      - src/*
    exclude:
      - docs/*
# Define versioning variables
variables:
  major: 1
  minor: 0
  patch: $[counter(variables['Build.SourceBranchName'], 1)]
  buildConfiguration: 'Release'

# Set the build number to follow Semantic Versioning
name: $(major).$(minor).$(patch).$(Build.BuildId)

pool:
  name: 'praveen-self-hosted-agent'

jobs:
- job: Build
  steps:
  
  # Restore NuGet packages
  - task: DotNetCoreCLI@2
    inputs:
      azureSubscription: 'devops-demo-service-connection'
      command: 'restore'
      projects: '**/*.csproj'

  # Build the project
  - task: DotNetCoreCLI@2
    inputs:
      azureSubscription: 'devops-demo-service-connection'
      command: 'build'
      projects: '**/*.csproj'

  # # Run unit tests
  # - task: DotNetCoreCLI@2
  #   displayName: 'Run Unit Tests'
  #   inputs:
  #     azureSubscription: 'devops-demo-service-connection'
  #     command: 'test'
  #     projects: '**/*Tests.csproj'
  #     arguments: '--configuration $(BuildConfiguration) --no-build --collect:"Code Coverage"'

  # Publish the project
  - task: DotNetCoreCLI@2
    inputs:
      azureSubscription: 'devops-demo-service-connection'
      command: 'publish'
      publishWebProjects: false
      projects: '**/*.csproj'
      zipAfterPublish: true
      arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'

  # Publish build artifacts
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'
